   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LED.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.init_LED,"ax",%progbits
  18              		.align	2
  19              		.global	init_LED
  20              		.code	16
  21              		.thumb_func
  23              	init_LED:
  24              	.LFB0:
  25              		.file 1 "../Sources/LED.c"
   1:../Sources/LED.c **** /*
   2:../Sources/LED.c ****  * LED.h
   3:../Sources/LED.c ****  *
   4:../Sources/LED.c ****  *  Created on: Mar 13, 2013
   5:../Sources/LED.c ****  *      Author: Arteko
   6:../Sources/LED.c ****  */
   7:../Sources/LED.c **** #include "LED.h"
   8:../Sources/LED.c **** 
   9:../Sources/LED.c **** #ifdef MCU_MKL25Z4
  10:../Sources/LED.c **** 
  11:../Sources/LED.c **** /** Configuración de LEDs para el KL25Z **/
  12:../Sources/LED.c **** 
  13:../Sources/LED.c **** void init_LED(int color) 
  14:../Sources/LED.c **** {
  15:../Sources/LED.c **** 	switch(color)
  16:../Sources/LED.c **** 	{
  17:../Sources/LED.c **** 		case GREEN:
  18:../Sources/LED.c **** 			  /* Configure pin as output */
  19:../Sources/LED.c **** 			  GPIOB_PDDR |= GPIO_PDDR_PDD(1<<19);                                                   
  20:../Sources/LED.c **** 		
  21:../Sources/LED.c **** 			  /* Set initialization value */
  22:../Sources/LED.c **** 			  GPIOB_PDOR &= (uint32_t)~(GPIO_PDOR_PDO(1<<19));                                              
  23:../Sources/LED.c **** 		
  24:../Sources/LED.c **** 			  /* Initialization of Port Control register */
  25:../Sources/LED.c **** 			  /* 31–25  Reserved  0000000
  26:../Sources/LED.c **** 			   * 24 Interrupt Status Flag 0
  27:../Sources/LED.c **** 			   * 23–20 Reserved 0000
  28:../Sources/LED.c **** 			   * 19–16 Interrupt Configuration 0000
  29:../Sources/LED.c **** 			   * 15–11 Reserved 00000
  30:../Sources/LED.c **** 			   * 10-8 Pin Mux Control 001 ( 000 Analógico, 001 Digital)
  31:../Sources/LED.c **** 			   * 7 Reserved 0
  32:../Sources/LED.c **** 			   * 6 Drive Strength Enable 0 (Solo aplicable en alto a los pines PTB0, PTB1, PTA12 y PTA13) 
  33:../Sources/LED.c **** 			   * 							These pins can be used to drive LED or power MOSFET directly.
  34:../Sources/LED.c **** 			   * 5 Reserved 0
  35:../Sources/LED.c **** 			   * 4 Passive Filter Enable 0	(RESET_b and PTB5 only)
  36:../Sources/LED.c **** 			   * 3 Reserved 0
  37:../Sources/LED.c **** 			   * 2 Slew Rate Enable 0 (Fast slew rate 0, Slow slew rate 1) 
  38:../Sources/LED.c **** 			   * 					  (Representa la incapacidad de un amplificador para seguir variaciones
  39:../Sources/LED.c **** 			   * 					  rápidas de la señal de entrada.)
  40:../Sources/LED.c **** 			   * 1 Pull Enable 1	(0 not enable, 1 enabled)
  41:../Sources/LED.c **** 			   * 					(All the pins are hard wired to be pullup except for SWD_CLK)
  42:../Sources/LED.c **** 			   * 0 Pull Select 1  (0 pulldown, 1 pullup)				   
  43:../Sources/LED.c **** 			   */
  44:../Sources/LED.c **** 			  
  45:../Sources/LED.c **** 			  PORTB_PCR19 = (PORT_PCR_PS_MASK|PORT_PCR_PE_MASK|PORT_PCR_MUX(1));//;x0103;    
  46:../Sources/LED.c **** 		break;
  47:../Sources/LED.c **** 		case RED:
  48:../Sources/LED.c **** 			  /* Configure pin as output */
  49:../Sources/LED.c **** 			  GPIOB_PDDR |= GPIO_PDDR_PDD(1<<18);                                                   
  50:../Sources/LED.c **** 		
  51:../Sources/LED.c **** 			  /* Set initialization value */
  52:../Sources/LED.c **** 			  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(1<<18));                                    
  53:../Sources/LED.c **** 							 
  54:../Sources/LED.c **** 			  /* Initialization of Port Control register */		 
  55:../Sources/LED.c **** 			  PORTB_PCR18 =  (PORT_PCR_PS_MASK|PORT_PCR_PE_MASK|PORT_PCR_MUX(1));   
  56:../Sources/LED.c **** 		break;
  57:../Sources/LED.c **** 		case BLUE:
  58:../Sources/LED.c **** 			 /* Configure pin as output */
  59:../Sources/LED.c **** 			  /* GPIOB_PDDR |= 0100|0000|0000
  60:../Sources/LED.c **** 			   * */
  61:../Sources/LED.c **** 			  GPIOD_PDDR |= GPIO_PDDR_PDD(1<<1);                                                   
  62:../Sources/LED.c **** 		
  63:../Sources/LED.c **** 			  /* Set initialization value */
  64:../Sources/LED.c **** 			  /* GPIOB_PDOR: PDO&=~0x0400 */
  65:../Sources/LED.c **** 			  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(1<<1));                                     
  66:../Sources/LED.c **** 		
  67:../Sources/LED.c **** 			  /* Initialization of Port Control register */
  68:../Sources/LED.c **** 			  /* PORTB_PCR9: ISF=0,MUX=1 */
  69:../Sources/LED.c **** 			  PORTD_PCR1 =  (PORT_PCR_PS_MASK|PORT_PCR_PE_MASK|PORT_PCR_MUX(1));  
  70:../Sources/LED.c **** 		break;
  71:../Sources/LED.c **** 	}
  72:../Sources/LED.c **** 	Led_Off(color);
  73:../Sources/LED.c **** }
  74:../Sources/LED.c **** 
  75:../Sources/LED.c **** void Led_On(int color)
  76:../Sources/LED.c **** {
  77:../Sources/LED.c **** 	switch(color)
  78:../Sources/LED.c **** 	{
  79:../Sources/LED.c **** 		case RED:	  /* Set Led on    */
  80:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)~(GPIO_PDOR_PDO(1<<19));
  81:../Sources/LED.c **** 		break;
  82:../Sources/LED.c **** 		case GREEN:   /* Set Led on   */
  83:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)~(GPIO_PDOR_PDO(1<<18));
  84:../Sources/LED.c **** 		break;
  85:../Sources/LED.c **** 		case BLUE:	  /* Set Led on    */
  86:../Sources/LED.c **** 			  GPIOD_PSOR |= (uint32_t)~(GPIO_PDOR_PDO(1<<1));
  87:../Sources/LED.c **** 		break;
  88:../Sources/LED.c **** 				
  89:../Sources/LED.c **** 	}
  90:../Sources/LED.c **** }
  91:../Sources/LED.c **** 
  92:../Sources/LED.c **** 
  93:../Sources/LED.c **** void Led_Off(int color)
  94:../Sources/LED.c **** {
  95:../Sources/LED.c **** 	switch(color)
  96:../Sources/LED.c **** 	{
  97:../Sources/LED.c **** 		case RED:	  /* Set Led off   */
  98:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)(GPIO_PDOR_PDO(1<<19));
  99:../Sources/LED.c **** 		break;
 100:../Sources/LED.c **** 		case GREEN:   /* Set Led off   */
 101:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)(GPIO_PDOR_PDO(1<<18));
 102:../Sources/LED.c **** 		break;
 103:../Sources/LED.c **** 		case BLUE:	  /* Set Led off    */
 104:../Sources/LED.c **** 			  GPIOD_PSOR |= (uint32_t)(GPIO_PDOR_PDO(1<<1));
 105:../Sources/LED.c **** 		break;
 106:../Sources/LED.c **** 				
 107:../Sources/LED.c **** 	}
 108:../Sources/LED.c **** }
 109:../Sources/LED.c **** 
 110:../Sources/LED.c **** 
 111:../Sources/LED.c **** void Led_Neg(int color)
 112:../Sources/LED.c **** {
 113:../Sources/LED.c **** 	switch(color)
 114:../Sources/LED.c **** 	{
 115:../Sources/LED.c **** 		case RED:	  
 116:../Sources/LED.c **** 			  GPIOB_PTOR |= (uint32_t)(GPIO_PTOR_PTTO(1<<19));
 117:../Sources/LED.c **** 		break;
 118:../Sources/LED.c **** 		case GREEN:   
 119:../Sources/LED.c **** 			  GPIOB_PTOR |= (uint32_t)(GPIO_PTOR_PTTO(1<<18));
 120:../Sources/LED.c **** 		break;
 121:../Sources/LED.c **** 		case BLUE:	  
 122:../Sources/LED.c **** 			  GPIOD_PTOR |= (uint32_t)(GPIO_PTOR_PTTO(1<<1));
 123:../Sources/LED.c **** 		break;
 124:../Sources/LED.c **** 	}
 125:../Sources/LED.c **** }
 126:../Sources/LED.c **** #endif
 127:../Sources/LED.c **** 
 128:../Sources/LED.c **** #ifdef MCU_MKL05Z4
 129:../Sources/LED.c **** /** Configuración de LEDs para el KL05Z **/
 130:../Sources/LED.c **** 
 131:../Sources/LED.c **** void init_LED(int color) 
 132:../Sources/LED.c **** {
  26              		.loc 1 132 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 133:../Sources/LED.c **** 	switch(color)
  40              		.loc 1 133 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 022B     		cmp	r3, #2
  43 000c 28D0     		beq	.L4
  44 000e 032B     		cmp	r3, #3
  45 0010 02D0     		beq	.L5
  46 0012 012B     		cmp	r3, #1
  47 0014 12D0     		beq	.L3
  48 0016 35E0     		b	.L1
  49              	.L5:
 134:../Sources/LED.c **** 	{
 135:../Sources/LED.c **** 		case GREEN:
 136:../Sources/LED.c **** 			  /* Configure pin as output */
 137:../Sources/LED.c **** 			  GPIOB_PDDR |= GPIO_PDDR_PDD(1<<8);                                                   
  50              		.loc 1 137 0
  51 0018 1C4B     		ldr	r3, .L6
  52 001a 1C4A     		ldr	r2, .L6
  53 001c 5269     		ldr	r2, [r2, #20]
  54 001e 8021     		mov	r1, #128
  55 0020 4900     		lsl	r1, r1, #1
  56 0022 0A43     		orr	r2, r1
  57 0024 5A61     		str	r2, [r3, #20]
 138:../Sources/LED.c **** 		
 139:../Sources/LED.c **** 			  /* Set initialization value */
 140:../Sources/LED.c **** 			  GPIOB_PDOR &= (uint32_t)~(GPIO_PDOR_PDO(1<<8));                                               
  58              		.loc 1 140 0
  59 0026 194B     		ldr	r3, .L6
  60 0028 184A     		ldr	r2, .L6
  61 002a 1268     		ldr	r2, [r2]
  62 002c 111C     		mov	r1, r2
  63 002e 184A     		ldr	r2, .L6+4
  64 0030 0A40     		and	r2, r1
  65 0032 1A60     		str	r2, [r3]
 141:../Sources/LED.c **** 		
 142:../Sources/LED.c **** 			  /* Initialization of Port Control register */
 143:../Sources/LED.c **** 			  /* 31–25  Reserved  0000000
 144:../Sources/LED.c **** 			   * 24 Interrupt Status Flag 0
 145:../Sources/LED.c **** 			   * 23–20 Reserved 0000
 146:../Sources/LED.c **** 			   * 19–16 Interrupt Configuration 0000
 147:../Sources/LED.c **** 			   * 15–11 Reserved 00000
 148:../Sources/LED.c **** 			   * 10-8 Pin Mux Control 001 ( 000 Analógico, 001 Digital)
 149:../Sources/LED.c **** 			   * 7 Reserved 0
 150:../Sources/LED.c **** 			   * 6 Drive Strength Enable 0 (Solo aplicable en alto a los pines PTB0, PTB1, PTA12 y PTA13) 
 151:../Sources/LED.c **** 			   * 							These pins can be used to drive LED or power MOSFET directly.
 152:../Sources/LED.c **** 			   * 5 Reserved 0
 153:../Sources/LED.c **** 			   * 4 Passive Filter Enable 0	(RESET_b and PTB5 only)
 154:../Sources/LED.c **** 			   * 3 Reserved 0
 155:../Sources/LED.c **** 			   * 2 Slew Rate Enable 0 (Fast slew rate 0, Slow slew rate 1) 
 156:../Sources/LED.c **** 			   * 					  (Representa la incapacidad de un amplificador para seguir variaciones
 157:../Sources/LED.c **** 			   * 					  rápidas de la señal de entrada.)
 158:../Sources/LED.c **** 			   * 1 Pull Enable 1	(0 not enable, 1 enabled)
 159:../Sources/LED.c **** 			   * 					(All the pins are hard wired to be pullup except for SWD_CLK)
 160:../Sources/LED.c **** 			   * 0 Pull Select 1  (0 pulldown, 1 pullup)				   
 161:../Sources/LED.c **** 			   */
 162:../Sources/LED.c **** 			  
 163:../Sources/LED.c **** 			  PORTB_PCR8 = (PORT_PCR_PS_MASK|PORT_PCR_PE_MASK|PORT_PCR_MUX(1));//;x0103;    
  66              		.loc 1 163 0
  67 0034 174B     		ldr	r3, .L6+8
  68 0036 184A     		ldr	r2, .L6+12
  69 0038 1A62     		str	r2, [r3, #32]
 164:../Sources/LED.c **** 		break;
  70              		.loc 1 164 0
  71 003a 23E0     		b	.L1
  72              	.L3:
 165:../Sources/LED.c **** 		case RED:
 166:../Sources/LED.c **** 			  /* Configure pin as output */
 167:../Sources/LED.c **** 			  GPIOB_PDDR |= GPIO_PDDR_PDD(1<<9);                                                   
  73              		.loc 1 167 0
  74 003c 134B     		ldr	r3, .L6
  75 003e 134A     		ldr	r2, .L6
  76 0040 5269     		ldr	r2, [r2, #20]
  77 0042 8021     		mov	r1, #128
  78 0044 8900     		lsl	r1, r1, #2
  79 0046 0A43     		orr	r2, r1
  80 0048 5A61     		str	r2, [r3, #20]
 168:../Sources/LED.c **** 		
 169:../Sources/LED.c **** 			  /* Set initialization value */
 170:../Sources/LED.c **** 			  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(1<<9));                                     
  81              		.loc 1 170 0
  82 004a 104B     		ldr	r3, .L6
  83 004c 0F4A     		ldr	r2, .L6
  84 004e 1268     		ldr	r2, [r2]
  85 0050 111C     		mov	r1, r2
  86 0052 124A     		ldr	r2, .L6+16
  87 0054 0A40     		and	r2, r1
  88 0056 1A60     		str	r2, [r3]
 171:../Sources/LED.c **** 							 
 172:../Sources/LED.c **** 			  /* Initialization of Port Control register */
 173:../Sources/LED.c **** 			  /* PORTB_PCR9: ISF=0,MUX=1 */					 
 174:../Sources/LED.c **** 			  PORTB_PCR9 =  (PORT_PCR_PS_MASK|PORT_PCR_PE_MASK|PORT_PCR_MUX(1));   
  89              		.loc 1 174 0
  90 0058 0E4B     		ldr	r3, .L6+8
  91 005a 0F4A     		ldr	r2, .L6+12
  92 005c 5A62     		str	r2, [r3, #36]
 175:../Sources/LED.c **** 		break;
  93              		.loc 1 175 0
  94 005e 11E0     		b	.L1
  95              	.L4:
 176:../Sources/LED.c **** 		case BLUE:
 177:../Sources/LED.c **** 			 /* Configure pin as output */
 178:../Sources/LED.c **** 			  GPIOB_PDDR |= GPIO_PDDR_PDD(1<<10);                                                   
  96              		.loc 1 178 0
  97 0060 0A4B     		ldr	r3, .L6
  98 0062 0A4A     		ldr	r2, .L6
  99 0064 5269     		ldr	r2, [r2, #20]
 100 0066 8021     		mov	r1, #128
 101 0068 C900     		lsl	r1, r1, #3
 102 006a 0A43     		orr	r2, r1
 103 006c 5A61     		str	r2, [r3, #20]
 179:../Sources/LED.c **** 		
 180:../Sources/LED.c **** 			  /* Set initialization value */
 181:../Sources/LED.c **** 			  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(1<<10));                                    
 104              		.loc 1 181 0
 105 006e 074B     		ldr	r3, .L6
 106 0070 064A     		ldr	r2, .L6
 107 0072 1268     		ldr	r2, [r2]
 108 0074 111C     		mov	r1, r2
 109 0076 0A4A     		ldr	r2, .L6+20
 110 0078 0A40     		and	r2, r1
 111 007a 1A60     		str	r2, [r3]
 182:../Sources/LED.c **** 		
 183:../Sources/LED.c **** 			  /* Initialization of Port Control register */
 184:../Sources/LED.c **** 			  /* PORTB_PCR9: ISF=0,MUX=1 */
 185:../Sources/LED.c **** 			  PORTB_PCR10 =  (PORT_PCR_PS_MASK|PORT_PCR_PE_MASK|PORT_PCR_MUX(1));  
 112              		.loc 1 185 0
 113 007c 054B     		ldr	r3, .L6+8
 114 007e 064A     		ldr	r2, .L6+12
 115 0080 9A62     		str	r2, [r3, #40]
 186:../Sources/LED.c **** 		break;
 116              		.loc 1 186 0
 117 0082 C046     		mov	r8, r8
 118              	.L1:
 187:../Sources/LED.c **** 	}
 188:../Sources/LED.c **** }
 119              		.loc 1 188 0
 120 0084 BD46     		mov	sp, r7
 121 0086 02B0     		add	sp, sp, #8
 122              		@ sp needed for prologue
 123 0088 80BD     		pop	{r7, pc}
 124              	.L7:
 125 008a C046     		.align	2
 126              	.L6:
 127 008c 40F00F40 		.word	1074786368
 128 0090 FFFEFFFF 		.word	-257
 129 0094 00A00440 		.word	1074044928
 130 0098 03010000 		.word	259
 131 009c FFFDFFFF 		.word	-513
 132 00a0 FFFBFFFF 		.word	-1025
 133              		.cfi_endproc
 134              	.LFE0:
 136              		.section	.text.Led_On,"ax",%progbits
 137              		.align	2
 138              		.global	Led_On
 139              		.code	16
 140              		.thumb_func
 142              	Led_On:
 143              	.LFB1:
 189:../Sources/LED.c **** 
 190:../Sources/LED.c **** void Led_On(int color)
 191:../Sources/LED.c **** {
 144              		.loc 1 191 0
 145              		.cfi_startproc
 146 0000 80B5     		push	{r7, lr}
 147              	.LCFI3:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 7, -8
 150              		.cfi_offset 14, -4
 151 0002 82B0     		sub	sp, sp, #8
 152              	.LCFI4:
 153              		.cfi_def_cfa_offset 16
 154 0004 00AF     		add	r7, sp, #0
 155              	.LCFI5:
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
 192:../Sources/LED.c **** 	switch(color)
 158              		.loc 1 192 0
 159 0008 7B68     		ldr	r3, [r7, #4]
 160 000a 022B     		cmp	r3, #2
 161 000c 11D0     		beq	.L11
 162 000e 032B     		cmp	r3, #3
 163 0010 08D0     		beq	.L12
 164 0012 012B     		cmp	r3, #1
 165 0014 14D1     		bne	.L8
 166              	.L10:
 193:../Sources/LED.c **** 	{
 194:../Sources/LED.c **** 		case RED:	 
 195:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)~(GPIO_PDOR_PDO(1<<8));
 167              		.loc 1 195 0
 168 0016 0C4B     		ldr	r3, .L13
 169 0018 0B4A     		ldr	r2, .L13
 170 001a 5268     		ldr	r2, [r2, #4]
 171 001c 0B49     		ldr	r1, .L13+4
 172 001e 0A43     		orr	r2, r1
 173 0020 5A60     		str	r2, [r3, #4]
 196:../Sources/LED.c **** 		break;
 174              		.loc 1 196 0
 175 0022 0DE0     		b	.L8
 176              	.L12:
 197:../Sources/LED.c **** 		case GREEN:   
 198:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)~(GPIO_PDOR_PDO(1<<9));
 177              		.loc 1 198 0
 178 0024 084B     		ldr	r3, .L13
 179 0026 084A     		ldr	r2, .L13
 180 0028 5268     		ldr	r2, [r2, #4]
 181 002a 0949     		ldr	r1, .L13+8
 182 002c 0A43     		orr	r2, r1
 183 002e 5A60     		str	r2, [r3, #4]
 199:../Sources/LED.c **** 		break;
 184              		.loc 1 199 0
 185 0030 06E0     		b	.L8
 186              	.L11:
 200:../Sources/LED.c **** 		case BLUE:	  
 201:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)~(GPIO_PDOR_PDO(1<<10));
 187              		.loc 1 201 0
 188 0032 054B     		ldr	r3, .L13
 189 0034 044A     		ldr	r2, .L13
 190 0036 5268     		ldr	r2, [r2, #4]
 191 0038 0649     		ldr	r1, .L13+12
 192 003a 0A43     		orr	r2, r1
 193 003c 5A60     		str	r2, [r3, #4]
 202:../Sources/LED.c **** 		break;
 194              		.loc 1 202 0
 195 003e C046     		mov	r8, r8
 196              	.L8:
 203:../Sources/LED.c **** 				
 204:../Sources/LED.c **** 	}
 205:../Sources/LED.c **** }
 197              		.loc 1 205 0
 198 0040 BD46     		mov	sp, r7
 199 0042 02B0     		add	sp, sp, #8
 200              		@ sp needed for prologue
 201 0044 80BD     		pop	{r7, pc}
 202              	.L14:
 203 0046 C046     		.align	2
 204              	.L13:
 205 0048 40F00F40 		.word	1074786368
 206 004c FFFEFFFF 		.word	-257
 207 0050 FFFDFFFF 		.word	-513
 208 0054 FFFBFFFF 		.word	-1025
 209              		.cfi_endproc
 210              	.LFE1:
 212              		.section	.text.Led_Off,"ax",%progbits
 213              		.align	2
 214              		.global	Led_Off
 215              		.code	16
 216              		.thumb_func
 218              	Led_Off:
 219              	.LFB2:
 206:../Sources/LED.c **** 
 207:../Sources/LED.c **** 
 208:../Sources/LED.c **** void Led_Off(int color)
 209:../Sources/LED.c **** {
 220              		.loc 1 209 0
 221              		.cfi_startproc
 222 0000 80B5     		push	{r7, lr}
 223              	.LCFI6:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 82B0     		sub	sp, sp, #8
 228              	.LCFI7:
 229              		.cfi_def_cfa_offset 16
 230 0004 00AF     		add	r7, sp, #0
 231              	.LCFI8:
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 210:../Sources/LED.c **** 	switch(color)
 234              		.loc 1 210 0
 235 0008 7B68     		ldr	r3, [r7, #4]
 236 000a 022B     		cmp	r3, #2
 237 000c 13D0     		beq	.L18
 238 000e 032B     		cmp	r3, #3
 239 0010 09D0     		beq	.L19
 240 0012 012B     		cmp	r3, #1
 241 0014 17D1     		bne	.L15
 242              	.L17:
 211:../Sources/LED.c **** 	{
 212:../Sources/LED.c **** 		case RED:	  
 213:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)(GPIO_PDOR_PDO(1<<8));
 243              		.loc 1 213 0
 244 0016 0D4B     		ldr	r3, .L20
 245 0018 0C4A     		ldr	r2, .L20
 246 001a 5268     		ldr	r2, [r2, #4]
 247 001c 8021     		mov	r1, #128
 248 001e 4900     		lsl	r1, r1, #1
 249 0020 0A43     		orr	r2, r1
 250 0022 5A60     		str	r2, [r3, #4]
 214:../Sources/LED.c **** 		break;
 251              		.loc 1 214 0
 252 0024 0FE0     		b	.L15
 253              	.L19:
 215:../Sources/LED.c **** 		case GREEN:   
 216:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)(GPIO_PDOR_PDO(1<<9));
 254              		.loc 1 216 0
 255 0026 094B     		ldr	r3, .L20
 256 0028 084A     		ldr	r2, .L20
 257 002a 5268     		ldr	r2, [r2, #4]
 258 002c 8021     		mov	r1, #128
 259 002e 8900     		lsl	r1, r1, #2
 260 0030 0A43     		orr	r2, r1
 261 0032 5A60     		str	r2, [r3, #4]
 217:../Sources/LED.c **** 		break;
 262              		.loc 1 217 0
 263 0034 07E0     		b	.L15
 264              	.L18:
 218:../Sources/LED.c **** 		case BLUE:	  
 219:../Sources/LED.c **** 			  GPIOB_PSOR |= (uint32_t)(GPIO_PDOR_PDO(1<<10));
 265              		.loc 1 219 0
 266 0036 054B     		ldr	r3, .L20
 267 0038 044A     		ldr	r2, .L20
 268 003a 5268     		ldr	r2, [r2, #4]
 269 003c 8021     		mov	r1, #128
 270 003e C900     		lsl	r1, r1, #3
 271 0040 0A43     		orr	r2, r1
 272 0042 5A60     		str	r2, [r3, #4]
 220:../Sources/LED.c **** 		break;
 273              		.loc 1 220 0
 274 0044 C046     		mov	r8, r8
 275              	.L15:
 221:../Sources/LED.c **** 				
 222:../Sources/LED.c **** 	}
 223:../Sources/LED.c **** }
 276              		.loc 1 223 0
 277 0046 BD46     		mov	sp, r7
 278 0048 02B0     		add	sp, sp, #8
 279              		@ sp needed for prologue
 280 004a 80BD     		pop	{r7, pc}
 281              	.L21:
 282              		.align	2
 283              	.L20:
 284 004c 40F00F40 		.word	1074786368
 285              		.cfi_endproc
 286              	.LFE2:
 288              		.section	.text.Led_Neg,"ax",%progbits
 289              		.align	2
 290              		.global	Led_Neg
 291              		.code	16
 292              		.thumb_func
 294              	Led_Neg:
 295              	.LFB3:
 224:../Sources/LED.c **** 
 225:../Sources/LED.c **** 
 226:../Sources/LED.c **** void Led_Neg(int color)
 227:../Sources/LED.c **** {
 296              		.loc 1 227 0
 297              		.cfi_startproc
 298 0000 80B5     		push	{r7, lr}
 299              	.LCFI9:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303 0002 82B0     		sub	sp, sp, #8
 304              	.LCFI10:
 305              		.cfi_def_cfa_offset 16
 306 0004 00AF     		add	r7, sp, #0
 307              	.LCFI11:
 308              		.cfi_def_cfa_register 7
 309 0006 7860     		str	r0, [r7, #4]
 228:../Sources/LED.c **** 	switch(color)
 310              		.loc 1 228 0
 311 0008 7B68     		ldr	r3, [r7, #4]
 312 000a 022B     		cmp	r3, #2
 313 000c 13D0     		beq	.L25
 314 000e 032B     		cmp	r3, #3
 315 0010 09D0     		beq	.L26
 316 0012 012B     		cmp	r3, #1
 317 0014 17D1     		bne	.L22
 318              	.L24:
 229:../Sources/LED.c **** 	{
 230:../Sources/LED.c **** 		case RED:	 
 231:../Sources/LED.c **** 			  GPIOB_PTOR |= (uint32_t)(GPIO_PTOR_PTTO(1<<8));
 319              		.loc 1 231 0
 320 0016 0D4B     		ldr	r3, .L27
 321 0018 0C4A     		ldr	r2, .L27
 322 001a D268     		ldr	r2, [r2, #12]
 323 001c 8021     		mov	r1, #128
 324 001e 4900     		lsl	r1, r1, #1
 325 0020 0A43     		orr	r2, r1
 326 0022 DA60     		str	r2, [r3, #12]
 232:../Sources/LED.c **** 		break;
 327              		.loc 1 232 0
 328 0024 0FE0     		b	.L22
 329              	.L26:
 233:../Sources/LED.c **** 		case GREEN:  
 234:../Sources/LED.c **** 			  GPIOB_PTOR |= (uint32_t)(GPIO_PTOR_PTTO(1<<9));
 330              		.loc 1 234 0
 331 0026 094B     		ldr	r3, .L27
 332 0028 084A     		ldr	r2, .L27
 333 002a D268     		ldr	r2, [r2, #12]
 334 002c 8021     		mov	r1, #128
 335 002e 8900     		lsl	r1, r1, #2
 336 0030 0A43     		orr	r2, r1
 337 0032 DA60     		str	r2, [r3, #12]
 235:../Sources/LED.c **** 		break;
 338              		.loc 1 235 0
 339 0034 07E0     		b	.L22
 340              	.L25:
 236:../Sources/LED.c **** 		case BLUE:	  
 237:../Sources/LED.c **** 			  GPIOB_PTOR |= (uint32_t)(GPIO_PTOR_PTTO(1<<10));
 341              		.loc 1 237 0
 342 0036 054B     		ldr	r3, .L27
 343 0038 044A     		ldr	r2, .L27
 344 003a D268     		ldr	r2, [r2, #12]
 345 003c 8021     		mov	r1, #128
 346 003e C900     		lsl	r1, r1, #3
 347 0040 0A43     		orr	r2, r1
 348 0042 DA60     		str	r2, [r3, #12]
 238:../Sources/LED.c **** 		break;
 349              		.loc 1 238 0
 350 0044 C046     		mov	r8, r8
 351              	.L22:
 239:../Sources/LED.c **** 	}
 240:../Sources/LED.c **** }
 352              		.loc 1 240 0
 353 0046 BD46     		mov	sp, r7
 354 0048 02B0     		add	sp, sp, #8
 355              		@ sp needed for prologue
 356 004a 80BD     		pop	{r7, pc}
 357              	.L28:
 358              		.align	2
 359              	.L27:
 360 004c 40F00F40 		.word	1074786368
 361              		.cfi_endproc
 362              	.LFE3:
 364              		.text
 365              	.Letext0:
 366              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 367              		.file 3 "C:/Users/erick/Documents/Servicio/workspace/MCG/Project_Headers/MKL05Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LED.c
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:18     .text.init_LED:00000000 $t
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:23     .text.init_LED:00000000 init_LED
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:127    .text.init_LED:0000008c $d
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:137    .text.Led_On:00000000 $t
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:142    .text.Led_On:00000000 Led_On
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:205    .text.Led_On:00000048 $d
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:213    .text.Led_Off:00000000 $t
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:218    .text.Led_Off:00000000 Led_Off
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:284    .text.Led_Off:0000004c $d
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:289    .text.Led_Neg:00000000 $t
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:294    .text.Led_Neg:00000000 Led_Neg
C:\Users\erick\AppData\Local\Temp\ccK5ZaAf.s:360    .text.Led_Neg:0000004c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
